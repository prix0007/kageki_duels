/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    Card: (() => {
      return defineComponent(
        world,
        { owner: RecsType.BigInt, cardId: RecsType.BigInt, power: RecsType.Number, health: RecsType.Number, factor: RecsType.Number, experience: RecsType.BigInt, battles: RecsType.BigInt, skill: RecsType.Number, element: RecsType.Number },
        {
          metadata: {
            name: "Card",
            types: ["contractaddress","u128","u32","u32","u8","u64","u64","enum","enum"],
            customTypes: ["Skill","Element"],
          },
        }
      );
    })(),
    CardCount: (() => {
      return defineComponent(
        world,
        { owner: RecsType.BigInt, total: RecsType.BigInt },
        {
          metadata: {
            name: "CardCount",
            types: ["contractaddress","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    Randomness: (() => {
      return defineComponent(
        world,
        { contract: RecsType.BigInt, last_random_id: RecsType.BigInt },
        {
          metadata: {
            name: "Randomness",
            types: ["contractaddress","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    Stage: (() => {
      return defineComponent(
        world,
        { p1: RecsType.BigInt, p2: RecsType.BigInt, stageId: RecsType.BigInt, p1_party: RecsType.BigInt, p2_party: RecsType.BigInt, is_finished: RecsType.Boolean, randomness: RecsType.BigInt, environment: RecsType.Number },
        {
          metadata: {
            name: "Stage",
            types: ["contractaddress","contractaddress","u128","u64","u64","bool","felt252","enum"],
            customTypes: ["Element"],
          },
        }
      );
    })(),
    StageSettings: (() => {
      return defineComponent(
        world,
        { stage_setting: RecsType.Number, stage_count: RecsType.BigInt },
        {
          metadata: {
            name: "StageSettings",
            types: ["u32","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    Player: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, battles: RecsType.BigInt, wins: RecsType.BigInt, loses: RecsType.BigInt, party_count: RecsType.BigInt },
        {
          metadata: {
            name: "Player",
            types: ["contractaddress","u64","u64","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerParty: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, partyId: RecsType.BigInt, is_active: RecsType.Boolean, card1: RecsType.BigInt, card2: RecsType.BigInt, card3: RecsType.BigInt, card4: RecsType.BigInt },
        {
          metadata: {
            name: "PlayerParty",
            types: ["contractaddress","u64","bool","u128","u128","u128","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    PartyCreated: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, party: { player: RecsType.BigInt, partyId: RecsType.BigInt, is_active: RecsType.Boolean, card1: RecsType.BigInt, card2: RecsType.BigInt, card3: RecsType.BigInt, card4: RecsType.BigInt } },
        {
          metadata: {
            name: "PartyCreated",
            types: ["contractaddress","contractaddress","u64","bool","u128","u128","u128","u128"],
            customTypes: ["PlayerParty"],
          },
        }
      );
    })(),
    PlayerCardCreated: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, cardId: RecsType.BigInt },
        {
          metadata: {
            name: "PlayerCardCreated",
            types: ["contractaddress","u128"],
            customTypes: [],
          },
        }
      );
    })(),
    BattleResult: (() => {
      return defineComponent(
        world,
        { winner: RecsType.BigInt, loser: RecsType.BigInt, party_id1: RecsType.BigInt, party_id2: RecsType.BigInt },
        {
          metadata: {
            name: "BattleResult",
            types: ["contractaddress","contractaddress","u64","u64"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
